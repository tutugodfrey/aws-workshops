AWSTemplateFormatVersion: 2010-09-09
Description: Lab 1 for AWS Security Governance at Scale - Technical

Parameters:
  LabVpcCidr:
    Type: String
    Default: 10.10.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$

  LabSubnetCidr:
    Type: String
    Default: 10.10.1.0/24
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$

  S3Url:
    Type: String
    Default: "https://aws-tc-largeobjects.s3-us-west-2.amazonaws.com/prevention/yml"

  S3Bucket:
    Type: String
    Default: aws-tc-largeobjects

Resources:
#-----Start - Create lab networking resources-----#
  LabVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref LabVpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Lab VPC

  LabSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref LabSubnetCidr
      VpcId: !Ref LabVpc
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Lab Subnet (Private)
#-----End - Create lab networking resources-----#

#-----Start - Create IAM role used for AWS Service Catalog S3 product tasks-----#
  S3ServiceCatalogRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: S3ServiceCatalogRole
      Description: IAM role used by AWS Service Catalog to provision an S3 bucket.
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - servicecatalog.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      Policies:
        - PolicyName: S3ServiceCatalogPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStacks
                  - cloudformation:GetTemplateSummary
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - cloudformation:UpdateStack
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:PutBucketPublicAccessBlock
                  - s3:PutBucketTagging
                  - s3:PutEncryptionConfiguration
                Resource: '*'
#-----End - Create IAM role used for AWS Service Catalog S3 product tasks-----#

#-----Start - Create IAM role used to allow access to products in AWS Service Catalog-----#
  ServiceCatalogAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ServiceCatalogAccessRole
      Description: IAM role used to allow access to AWS Service Catalog products.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSServiceCatalogEndUserReadOnlyAccess
      Policies:
        - PolicyName: ServiceCatalogAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeInstances
                  - ec2:DescribeSubnets
                  - s3:GetObject
                  - s3:GetBucketPublicAccessBlock
                  - s3:GetEncryptionConfiguration
                  - s3:ListAllMyBuckets
                  - s3:ListBucket
                  - servicecatalog:ProvisionProduct
                  - servicecatalog:TerminateProvisionedProduct
                Resource: '*'
#-----End - Create IAM role used to allow access to products in AWS Service Catalog-----#

#-----Start - Create IAM role used for AWS Service Catalog EC2 product tasks-----#
  EC2ServiceCatalogRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EC2ServiceCatalogRole
      Description: IAM role used by AWS Service Catalog to provision an EC2 instance.
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - servicecatalog.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      Policies:
        - PolicyName: EC2ServiceCatalogPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowServiceCatalogDeployEc2Instance
                Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStacks
                  - cloudformation:GetTemplateSummary
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - cloudformation:UpdateStack
                  - ec2:RunInstances
                  - ec2:TerminateInstances
                Resource: '*'
              - Sid: DenyDeployInstanceOutsideLabRegion
                Effect: Deny
                Action:
                  - ec2:RunInstances
                  - ec2:StartInstances
                Resource: '*'
                Condition:
                  StringNotEquals: {"ec2:Region": !Sub "${AWS::Region}"}
              - Sid: DenyNonAmazonOwnedAmis
                Effect: Deny
                Action:
                  - ec2:RunInstances
                Resource: arn:aws:ec2:*:*:image/*
                Condition:
                  StringNotEqualsIgnoreCaseIfExists: {"ec2:Owner": "amazon"}
              - Sid: DenyAllButSmallInstanceSizes
                Effect: Deny
                Action:
                  - ec2:RunInstances
                  - ec2:StartInstances
                Resource: arn:aws:ec2:*:*:instance/*
                Condition:
                  ForAnyValue:StringNotLike: {"ec2:InstanceType": ["t2.micro", "t3.micro"]}
#-----End - Create IAM role used for AWS Service Catalog EC2 product tasks-----#

#-----Start - Include stack to limit number of EC2 instances that can be deployed-----#
  EC2EnforcerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${S3Url}/enforce_ec2.yml"
      Parameters:
        S3Bucket: !Ref S3Bucket
        S3CodePath: "prevention/zipped_code"
        TopicArn: "arn:aws:sns:us-east-1:360097715036:Lab_Fraud_Prevention-EC2-Instances"
        AllowedRegions: "us-west-2"
        MaxInstances: "2"
        LabId: terminate
#-----End - Include stack to limit number of EC2 instances that can be deployed-----#

#-----Start - Create an IAM group with ReadOnly permissions and add the student user to it-----#
Outputs:
  AwsRegion:
    Description: The AWS Region the lab is running in.
    Value: !Sub ${AWS::Region}

  EC2TemplateUrl:
    Description: URL for the CloudFormation template used to create an AWS Service Catalog product to deploy an EC2 instance.
    Value: https://us-west-2-tcprod.s3.amazonaws.com/courses/ILT-TF-200-SISGOV/v1.3.2.prod-4f854de1/lab-1/scripts/EC2-instance-catalog-item.yaml

  S3TemplateUrl:
    Description: URL for the CloudFormation template used to create an AWS Service Catalog product to deploy an S3 bucket.
    Value: https://us-west-2-tcprod.s3.amazonaws.com/courses/ILT-TF-200-SISGOV/v1.3.2.prod-4f854de1/lab-1/scripts/S3-bucket-catalog-item.yaml

  ServiceCatalogAccessRole:
    Description: The sign-in URL for the ServiceCatalogAccessRole IAM role.
    Value: !Sub https://signin.aws.amazon.com/switchrole?roleName=ServiceCatalogAccessRole&account=${AWS::AccountId}